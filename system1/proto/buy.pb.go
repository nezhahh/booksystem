// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buy.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageQueryOneRequest struct {
	Head                 *MessageHead `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	BookName             string       `protobuf:"bytes,2,opt,name=BookName,proto3" json:"BookName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageQueryOneRequest) Reset()         { *m = MessageQueryOneRequest{} }
func (m *MessageQueryOneRequest) String() string { return proto.CompactTextString(m) }
func (*MessageQueryOneRequest) ProtoMessage()    {}
func (*MessageQueryOneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44998f98de420a65, []int{0}
}

func (m *MessageQueryOneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageQueryOneRequest.Unmarshal(m, b)
}
func (m *MessageQueryOneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageQueryOneRequest.Marshal(b, m, deterministic)
}
func (m *MessageQueryOneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageQueryOneRequest.Merge(m, src)
}
func (m *MessageQueryOneRequest) XXX_Size() int {
	return xxx_messageInfo_MessageQueryOneRequest.Size(m)
}
func (m *MessageQueryOneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageQueryOneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageQueryOneRequest proto.InternalMessageInfo

func (m *MessageQueryOneRequest) GetHead() *MessageHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *MessageQueryOneRequest) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

type MessageQueryOneResponse struct {
	Head                 *MessageHead `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	Books                *MsgBook     `protobuf:"bytes,2,opt,name=Books,proto3" json:"Books,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageQueryOneResponse) Reset()         { *m = MessageQueryOneResponse{} }
func (m *MessageQueryOneResponse) String() string { return proto.CompactTextString(m) }
func (*MessageQueryOneResponse) ProtoMessage()    {}
func (*MessageQueryOneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44998f98de420a65, []int{1}
}

func (m *MessageQueryOneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageQueryOneResponse.Unmarshal(m, b)
}
func (m *MessageQueryOneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageQueryOneResponse.Marshal(b, m, deterministic)
}
func (m *MessageQueryOneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageQueryOneResponse.Merge(m, src)
}
func (m *MessageQueryOneResponse) XXX_Size() int {
	return xxx_messageInfo_MessageQueryOneResponse.Size(m)
}
func (m *MessageQueryOneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageQueryOneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageQueryOneResponse proto.InternalMessageInfo

func (m *MessageQueryOneResponse) GetHead() *MessageHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *MessageQueryOneResponse) GetBooks() *MsgBook {
	if m != nil {
		return m.Books
	}
	return nil
}

type MessageBuyRequest struct {
	Head                 *MessageHead `protobuf:"bytes,1,opt,name=Head,proto3" json:"Head,omitempty"`
	BookName             string       `protobuf:"bytes,2,opt,name=BookName,proto3" json:"BookName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MessageBuyRequest) Reset()         { *m = MessageBuyRequest{} }
func (m *MessageBuyRequest) String() string { return proto.CompactTextString(m) }
func (*MessageBuyRequest) ProtoMessage()    {}
func (*MessageBuyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44998f98de420a65, []int{2}
}

func (m *MessageBuyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageBuyRequest.Unmarshal(m, b)
}
func (m *MessageBuyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageBuyRequest.Marshal(b, m, deterministic)
}
func (m *MessageBuyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageBuyRequest.Merge(m, src)
}
func (m *MessageBuyRequest) XXX_Size() int {
	return xxx_messageInfo_MessageBuyRequest.Size(m)
}
func (m *MessageBuyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageBuyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageBuyRequest proto.InternalMessageInfo

func (m *MessageBuyRequest) GetHead() *MessageHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *MessageBuyRequest) GetBookName() string {
	if m != nil {
		return m.BookName
	}
	return ""
}

func init() {
	proto.RegisterType((*MessageQueryOneRequest)(nil), "proto.MessageQueryOneRequest")
	proto.RegisterType((*MessageQueryOneResponse)(nil), "proto.MessageQueryOneResponse")
	proto.RegisterType((*MessageBuyRequest)(nil), "proto.MessageBuyRequest")
}

func init() { proto.RegisterFile("buy.proto", fileDescriptor_44998f98de420a65) }

var fileDescriptor_44998f98de420a65 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2a, 0xad, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x3c, 0xc9, 0xf9, 0xb9, 0xb9, 0xf9,
	0x79, 0x10, 0x41, 0x29, 0xae, 0xa4, 0xfc, 0xfc, 0x6c, 0x08, 0x5b, 0x29, 0x86, 0x4b, 0xcc, 0x37,
	0xb5, 0xb8, 0x38, 0x31, 0x3d, 0x35, 0xb0, 0x34, 0xb5, 0xa8, 0xd2, 0x3f, 0x2f, 0x35, 0x28, 0xb5,
	0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x8d, 0x8b, 0xc5, 0x23, 0x35, 0x31, 0x45, 0x82, 0x51, 0x81,
	0x51, 0x83, 0xdb, 0x48, 0x08, 0xa2, 0x5e, 0x0f, 0xaa, 0x18, 0x24, 0x13, 0x04, 0x96, 0x17, 0x92,
	0xe2, 0xe2, 0x70, 0xca, 0xcf, 0xcf, 0xf6, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0,
	0x0c, 0x82, 0xf3, 0x95, 0xd2, 0xb9, 0xc4, 0x31, 0x4c, 0x2f, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x25,
	0xda, 0x78, 0x15, 0x2e, 0x56, 0x90, 0x71, 0xc5, 0x60, 0xb3, 0xb9, 0x8d, 0xf8, 0x60, 0x0a, 0x8b,
	0xd3, 0x41, 0xc2, 0x41, 0x10, 0x49, 0xa5, 0x70, 0x2e, 0x41, 0xa8, 0x56, 0xa7, 0xd2, 0x4a, 0x2a,
	0xfa, 0xc0, 0xe8, 0x32, 0x23, 0x17, 0x3b, 0x88, 0xe3, 0x54, 0x5a, 0x29, 0xe4, 0xc0, 0xc5, 0x01,
	0xf6, 0x86, 0x63, 0x4e, 0x8e, 0x10, 0x16, 0xd3, 0xa4, 0xe4, 0x50, 0xc5, 0x60, 0x6a, 0x61, 0x5e,
	0x56, 0x62, 0x10, 0xf2, 0x86, 0x9a, 0xe0, 0x9f, 0x97, 0x2a, 0x24, 0x8b, 0x45, 0x35, 0x22, 0xf8,
	0xb1, 0x1a, 0x86, 0x14, 0x7e, 0x4a, 0x0c, 0x42, 0x96, 0x5c, 0xcc, 0x20, 0x57, 0x49, 0xa0, 0x2a,
	0x44, 0xf8, 0x5f, 0x4a, 0x0c, 0x55, 0x06, 0xa1, 0x35, 0x89, 0x0d, 0x2c, 0x61, 0x0c, 0x08, 0x00,
	0x00, 0xff, 0xff, 0xc7, 0xd6, 0x20, 0x85, 0x2a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookBuyClient is the client API for BookBuy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookBuyClient interface {
	QueryAll(ctx context.Context, in *MessageHead, opts ...grpc.CallOption) (*MessageQueryAllResponse, error)
	QueryOne(ctx context.Context, in *MessageQueryOneRequest, opts ...grpc.CallOption) (*MessageQueryOneResponse, error)
	Buy(ctx context.Context, in *MessageBuyRequest, opts ...grpc.CallOption) (*MessageResponse, error)
}

type bookBuyClient struct {
	cc *grpc.ClientConn
}

func NewBookBuyClient(cc *grpc.ClientConn) BookBuyClient {
	return &bookBuyClient{cc}
}

func (c *bookBuyClient) QueryAll(ctx context.Context, in *MessageHead, opts ...grpc.CallOption) (*MessageQueryAllResponse, error) {
	out := new(MessageQueryAllResponse)
	err := c.cc.Invoke(ctx, "/proto.BookBuy/QueryAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookBuyClient) QueryOne(ctx context.Context, in *MessageQueryOneRequest, opts ...grpc.CallOption) (*MessageQueryOneResponse, error) {
	out := new(MessageQueryOneResponse)
	err := c.cc.Invoke(ctx, "/proto.BookBuy/QueryOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookBuyClient) Buy(ctx context.Context, in *MessageBuyRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/proto.BookBuy/Buy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookBuyServer is the server API for BookBuy service.
type BookBuyServer interface {
	QueryAll(context.Context, *MessageHead) (*MessageQueryAllResponse, error)
	QueryOne(context.Context, *MessageQueryOneRequest) (*MessageQueryOneResponse, error)
	Buy(context.Context, *MessageBuyRequest) (*MessageResponse, error)
}

// UnimplementedBookBuyServer can be embedded to have forward compatible implementations.
type UnimplementedBookBuyServer struct {
}

func (*UnimplementedBookBuyServer) QueryAll(ctx context.Context, req *MessageHead) (*MessageQueryAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAll not implemented")
}
func (*UnimplementedBookBuyServer) QueryOne(ctx context.Context, req *MessageQueryOneRequest) (*MessageQueryOneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryOne not implemented")
}
func (*UnimplementedBookBuyServer) Buy(ctx context.Context, req *MessageBuyRequest) (*MessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Buy not implemented")
}

func RegisterBookBuyServer(s *grpc.Server, srv BookBuyServer) {
	s.RegisterService(&_BookBuy_serviceDesc, srv)
}

func _BookBuy_QueryAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageHead)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookBuyServer).QueryAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BookBuy/QueryAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookBuyServer).QueryAll(ctx, req.(*MessageHead))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookBuy_QueryOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageQueryOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookBuyServer).QueryOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BookBuy/QueryOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookBuyServer).QueryOne(ctx, req.(*MessageQueryOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookBuy_Buy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageBuyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookBuyServer).Buy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BookBuy/Buy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookBuyServer).Buy(ctx, req.(*MessageBuyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookBuy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BookBuy",
	HandlerType: (*BookBuyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryAll",
			Handler:    _BookBuy_QueryAll_Handler,
		},
		{
			MethodName: "QueryOne",
			Handler:    _BookBuy_QueryOne_Handler,
		},
		{
			MethodName: "Buy",
			Handler:    _BookBuy_Buy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "buy.proto",
}
